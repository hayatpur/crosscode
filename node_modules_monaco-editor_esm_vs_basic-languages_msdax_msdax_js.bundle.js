(self["webpackChunkcross_code"] = self["webpackChunkcross_code"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_msdax_msdax_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conf": () => (/* binding */ conf),
/* harmony export */   "language": () => (/* binding */ language)
/* harmony export */ });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var conf = {
    comments: {
        lineComment: '//',
        blockComment: ['/*', '*/']
    },
    brackets: [
        ['[', ']'],
        ['(', ')'],
        ['{', '}']
    ],
    autoClosingPairs: [
        { open: '"', close: '"', notIn: ['string', 'comment'] },
        { open: "'", close: "'", notIn: ['string', 'comment'] },
        { open: '[', close: ']', notIn: ['string', 'comment'] },
        { open: '(', close: ')', notIn: ['string', 'comment'] },
        { open: '{', close: '}', notIn: ['string', 'comment'] }
    ]
};
var language = {
    defaultToken: '',
    tokenPostfix: '.msdax',
    ignoreCase: true,
    brackets: [
        { open: '[', close: ']', token: 'delimiter.square' },
        { open: '{', close: '}', token: 'delimiter.brackets' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    keywords: [
        // Query keywords
        'VAR',
        'RETURN',
        'NOT',
        'EVALUATE',
        'DATATABLE',
        'ORDER',
        'BY',
        'START',
        'AT',
        'DEFINE',
        'MEASURE',
        'ASC',
        'DESC',
        'IN',
        // Datatable types
        'BOOLEAN',
        'DOUBLE',
        'INTEGER',
        'DATETIME',
        'CURRENCY',
        'STRING'
    ],
    functions: [
        // Relational
        'CLOSINGBALANCEMONTH',
        'CLOSINGBALANCEQUARTER',
        'CLOSINGBALANCEYEAR',
        'DATEADD',
        'DATESBETWEEN',
        'DATESINPERIOD',
        'DATESMTD',
        'DATESQTD',
        'DATESYTD',
        'ENDOFMONTH',
        'ENDOFQUARTER',
        'ENDOFYEAR',
        'FIRSTDATE',
        'FIRSTNONBLANK',
        'LASTDATE',
        'LASTNONBLANK',
        'NEXTDAY',
        'NEXTMONTH',
        'NEXTQUARTER',
        'NEXTYEAR',
        'OPENINGBALANCEMONTH',
        'OPENINGBALANCEQUARTER',
        'OPENINGBALANCEYEAR',
        'PARALLELPERIOD',
        'PREVIOUSDAY',
        'PREVIOUSMONTH',
        'PREVIOUSQUARTER',
        'PREVIOUSYEAR',
        'SAMEPERIODLASTYEAR',
        'STARTOFMONTH',
        'STARTOFQUARTER',
        'STARTOFYEAR',
        'TOTALMTD',
        'TOTALQTD',
        'TOTALYTD',
        'ADDCOLUMNS',
        'ADDMISSINGITEMS',
        'ALL',
        'ALLEXCEPT',
        'ALLNOBLANKROW',
        'ALLSELECTED',
        'CALCULATE',
        'CALCULATETABLE',
        'CALENDAR',
        'CALENDARAUTO',
        'CROSSFILTER',
        'CROSSJOIN',
        'CURRENTGROUP',
        'DATATABLE',
        'DETAILROWS',
        'DISTINCT',
        'EARLIER',
        'EARLIEST',
        'EXCEPT',
        'FILTER',
        'FILTERS',
        'GENERATE',
        'GENERATEALL',
        'GROUPBY',
        'IGNORE',
        'INTERSECT',
        'ISONORAFTER',
        'KEEPFILTERS',
        'LOOKUPVALUE',
        'NATURALINNERJOIN',
        'NATURALLEFTOUTERJOIN',
        'RELATED',
        'RELATEDTABLE',
        'ROLLUP',
        'ROLLUPADDISSUBTOTAL',
        'ROLLUPGROUP',
        'ROLLUPISSUBTOTAL',
        'ROW',
        'SAMPLE',
        'SELECTCOLUMNS',
        'SUBSTITUTEWITHINDEX',
        'SUMMARIZE',
        'SUMMARIZECOLUMNS',
        'TOPN',
        'TREATAS',
        'UNION',
        'USERELATIONSHIP',
        'VALUES',
        'SUM',
        'SUMX',
        'PATH',
        'PATHCONTAINS',
        'PATHITEM',
        'PATHITEMREVERSE',
        'PATHLENGTH',
        'AVERAGE',
        'AVERAGEA',
        'AVERAGEX',
        'COUNT',
        'COUNTA',
        'COUNTAX',
        'COUNTBLANK',
        'COUNTROWS',
        'COUNTX',
        'DISTINCTCOUNT',
        'DIVIDE',
        'GEOMEAN',
        'GEOMEANX',
        'MAX',
        'MAXA',
        'MAXX',
        'MEDIAN',
        'MEDIANX',
        'MIN',
        'MINA',
        'MINX',
        'PERCENTILE.EXC',
        'PERCENTILE.INC',
        'PERCENTILEX.EXC',
        'PERCENTILEX.INC',
        'PRODUCT',
        'PRODUCTX',
        'RANK.EQ',
        'RANKX',
        'STDEV.P',
        'STDEV.S',
        'STDEVX.P',
        'STDEVX.S',
        'VAR.P',
        'VAR.S',
        'VARX.P',
        'VARX.S',
        'XIRR',
        'XNPV',
        // Scalar
        'DATE',
        'DATEDIFF',
        'DATEVALUE',
        'DAY',
        'EDATE',
        'EOMONTH',
        'HOUR',
        'MINUTE',
        'MONTH',
        'NOW',
        'SECOND',
        'TIME',
        'TIMEVALUE',
        'TODAY',
        'WEEKDAY',
        'WEEKNUM',
        'YEAR',
        'YEARFRAC',
        'CONTAINS',
        'CONTAINSROW',
        'CUSTOMDATA',
        'ERROR',
        'HASONEFILTER',
        'HASONEVALUE',
        'ISBLANK',
        'ISCROSSFILTERED',
        'ISEMPTY',
        'ISERROR',
        'ISEVEN',
        'ISFILTERED',
        'ISLOGICAL',
        'ISNONTEXT',
        'ISNUMBER',
        'ISODD',
        'ISSUBTOTAL',
        'ISTEXT',
        'USERNAME',
        'USERPRINCIPALNAME',
        'AND',
        'FALSE',
        'IF',
        'IFERROR',
        'NOT',
        'OR',
        'SWITCH',
        'TRUE',
        'ABS',
        'ACOS',
        'ACOSH',
        'ACOT',
        'ACOTH',
        'ASIN',
        'ASINH',
        'ATAN',
        'ATANH',
        'BETA.DIST',
        'BETA.INV',
        'CEILING',
        'CHISQ.DIST',
        'CHISQ.DIST.RT',
        'CHISQ.INV',
        'CHISQ.INV.RT',
        'COMBIN',
        'COMBINA',
        'CONFIDENCE.NORM',
        'CONFIDENCE.T',
        'COS',
        'COSH',
        'COT',
        'COTH',
        'CURRENCY',
        'DEGREES',
        'EVEN',
        'EXP',
        'EXPON.DIST',
        'FACT',
        'FLOOR',
        'GCD',
        'INT',
        'ISO.CEILING',
        'LCM',
        'LN',
        'LOG',
        'LOG10',
        'MOD',
        'MROUND',
        'ODD',
        'PERMUT',
        'PI',
        'POISSON.DIST',
        'POWER',
        'QUOTIENT',
        'RADIANS',
        'RAND',
        'RANDBETWEEN',
        'ROUND',
        'ROUNDDOWN',
        'ROUNDUP',
        'SIGN',
        'SIN',
        'SINH',
        'SQRT',
        'SQRTPI',
        'TAN',
        'TANH',
        'TRUNC',
        'BLANK',
        'CONCATENATE',
        'CONCATENATEX',
        'EXACT',
        'FIND',
        'FIXED',
        'FORMAT',
        'LEFT',
        'LEN',
        'LOWER',
        'MID',
        'REPLACE',
        'REPT',
        'RIGHT',
        'SEARCH',
        'SUBSTITUTE',
        'TRIM',
        'UNICHAR',
        'UNICODE',
        'UPPER',
        'VALUE'
    ],
    tokenizer: {
        root: [
            { include: '@comments' },
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            { include: '@complexIdentifiers' },
            [/[;,.]/, 'delimiter'],
            [/[({})]/, '@brackets'],
            [
                /[a-z_][a-zA-Z0-9_]*/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@functions': 'keyword',
                        '@default': 'identifier'
                    }
                }
            ],
            [/[<>=!%&+\-*/|~^]/, 'operator']
        ],
        whitespace: [[/\s+/, 'white']],
        comments: [
            [/\/\/+.*/, 'comment'],
            [/\/\*/, { token: 'comment.quote', next: '@comment' }]
        ],
        comment: [
            [/[^*/]+/, 'comment'],
            [/\*\//, { token: 'comment.quote', next: '@pop' }],
            [/./, 'comment']
        ],
        numbers: [
            [/0[xX][0-9a-fA-F]*/, 'number'],
            [/[$][+-]*\d*(\.\d*)?/, 'number'],
            [/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/, 'number']
        ],
        strings: [
            [/N"/, { token: 'string', next: '@string' }],
            [/"/, { token: 'string', next: '@string' }]
        ],
        string: [
            [/[^"]+/, 'string'],
            [/""/, 'string'],
            [/"/, { token: 'string', next: '@pop' }]
        ],
        complexIdentifiers: [
            [/\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],
            [/'/, { token: 'identifier.quote', next: '@quotedIdentifier' }]
        ],
        bracketedIdentifier: [
            [/[^\]]+/, 'identifier'],
            [/]]/, 'identifier'],
            [/]/, { token: 'identifier.quote', next: '@pop' }]
        ],
        quotedIdentifier: [
            [/[^']+/, 'identifier'],
            [/''/, 'identifier'],
            [/'/, { token: 'identifier.quote', next: '@pop' }]
        ]
    }
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcm9zcy1jb2RlLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9tc2RheC9tc2RheC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQSxTQUFTLHNEQUFzRDtBQUMvRCxTQUFTLHNEQUFzRDtBQUMvRCxTQUFTLHNEQUFzRDtBQUMvRCxTQUFTLHNEQUFzRDtBQUMvRCxTQUFTLFNBQVMsWUFBWTtBQUM5QjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsbURBQW1EO0FBQzVELFNBQVMsU0FBUyxZQUFZLGdDQUFnQztBQUM5RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsdUJBQXVCO0FBQ3BDLGFBQWEseUJBQXlCO0FBQ3RDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsaUNBQWlDO0FBQzlDLGdCQUFnQjtBQUNoQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJDQUEyQztBQUNqRTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdUNBQXVDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUNBQW1DO0FBQ3ZELG1CQUFtQixtQ0FBbUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0NBQWdDO0FBQ25EO0FBQ0E7QUFDQSxvQkFBb0IsMERBQTBEO0FBQzlFLG1CQUFtQix1REFBdUQ7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMENBQTBDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBDQUEwQztBQUM3RDtBQUNBO0FBQ0EiLCJmaWxlIjoibm9kZV9tb2R1bGVzX21vbmFjby1lZGl0b3JfZXNtX3ZzX2Jhc2ljLWxhbmd1YWdlc19tc2RheF9tc2RheF9qcy5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuZXhwb3J0IHZhciBjb25mID0ge1xyXG4gICAgY29tbWVudHM6IHtcclxuICAgICAgICBsaW5lQ29tbWVudDogJy8vJyxcclxuICAgICAgICBibG9ja0NvbW1lbnQ6IFsnLyonLCAnKi8nXVxyXG4gICAgfSxcclxuICAgIGJyYWNrZXRzOiBbXHJcbiAgICAgICAgWydbJywgJ10nXSxcclxuICAgICAgICBbJygnLCAnKSddLFxyXG4gICAgICAgIFsneycsICd9J11cclxuICAgIF0sXHJcbiAgICBhdXRvQ2xvc2luZ1BhaXJzOiBbXHJcbiAgICAgICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxyXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiwgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxyXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nLCBub3RJbjogWydzdHJpbmcnLCAnY29tbWVudCddIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScsIG5vdEluOiBbJ3N0cmluZycsICdjb21tZW50J10gfSxcclxuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9Jywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9XHJcbiAgICBdXHJcbn07XHJcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XHJcbiAgICBkZWZhdWx0VG9rZW46ICcnLFxyXG4gICAgdG9rZW5Qb3N0Zml4OiAnLm1zZGF4JyxcclxuICAgIGlnbm9yZUNhc2U6IHRydWUsXHJcbiAgICBicmFja2V0czogW1xyXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nLCB0b2tlbjogJ2RlbGltaXRlci5zcXVhcmUnIH0sXHJcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScsIHRva2VuOiAnZGVsaW1pdGVyLmJyYWNrZXRzJyB9LFxyXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknLCB0b2tlbjogJ2RlbGltaXRlci5wYXJlbnRoZXNpcycgfVxyXG4gICAgXSxcclxuICAgIGtleXdvcmRzOiBbXHJcbiAgICAgICAgLy8gUXVlcnkga2V5d29yZHNcclxuICAgICAgICAnVkFSJyxcclxuICAgICAgICAnUkVUVVJOJyxcclxuICAgICAgICAnTk9UJyxcclxuICAgICAgICAnRVZBTFVBVEUnLFxyXG4gICAgICAgICdEQVRBVEFCTEUnLFxyXG4gICAgICAgICdPUkRFUicsXHJcbiAgICAgICAgJ0JZJyxcclxuICAgICAgICAnU1RBUlQnLFxyXG4gICAgICAgICdBVCcsXHJcbiAgICAgICAgJ0RFRklORScsXHJcbiAgICAgICAgJ01FQVNVUkUnLFxyXG4gICAgICAgICdBU0MnLFxyXG4gICAgICAgICdERVNDJyxcclxuICAgICAgICAnSU4nLFxyXG4gICAgICAgIC8vIERhdGF0YWJsZSB0eXBlc1xyXG4gICAgICAgICdCT09MRUFOJyxcclxuICAgICAgICAnRE9VQkxFJyxcclxuICAgICAgICAnSU5URUdFUicsXHJcbiAgICAgICAgJ0RBVEVUSU1FJyxcclxuICAgICAgICAnQ1VSUkVOQ1knLFxyXG4gICAgICAgICdTVFJJTkcnXHJcbiAgICBdLFxyXG4gICAgZnVuY3Rpb25zOiBbXHJcbiAgICAgICAgLy8gUmVsYXRpb25hbFxyXG4gICAgICAgICdDTE9TSU5HQkFMQU5DRU1PTlRIJyxcclxuICAgICAgICAnQ0xPU0lOR0JBTEFOQ0VRVUFSVEVSJyxcclxuICAgICAgICAnQ0xPU0lOR0JBTEFOQ0VZRUFSJyxcclxuICAgICAgICAnREFURUFERCcsXHJcbiAgICAgICAgJ0RBVEVTQkVUV0VFTicsXHJcbiAgICAgICAgJ0RBVEVTSU5QRVJJT0QnLFxyXG4gICAgICAgICdEQVRFU01URCcsXHJcbiAgICAgICAgJ0RBVEVTUVREJyxcclxuICAgICAgICAnREFURVNZVEQnLFxyXG4gICAgICAgICdFTkRPRk1PTlRIJyxcclxuICAgICAgICAnRU5ET0ZRVUFSVEVSJyxcclxuICAgICAgICAnRU5ET0ZZRUFSJyxcclxuICAgICAgICAnRklSU1REQVRFJyxcclxuICAgICAgICAnRklSU1ROT05CTEFOSycsXHJcbiAgICAgICAgJ0xBU1REQVRFJyxcclxuICAgICAgICAnTEFTVE5PTkJMQU5LJyxcclxuICAgICAgICAnTkVYVERBWScsXHJcbiAgICAgICAgJ05FWFRNT05USCcsXHJcbiAgICAgICAgJ05FWFRRVUFSVEVSJyxcclxuICAgICAgICAnTkVYVFlFQVInLFxyXG4gICAgICAgICdPUEVOSU5HQkFMQU5DRU1PTlRIJyxcclxuICAgICAgICAnT1BFTklOR0JBTEFOQ0VRVUFSVEVSJyxcclxuICAgICAgICAnT1BFTklOR0JBTEFOQ0VZRUFSJyxcclxuICAgICAgICAnUEFSQUxMRUxQRVJJT0QnLFxyXG4gICAgICAgICdQUkVWSU9VU0RBWScsXHJcbiAgICAgICAgJ1BSRVZJT1VTTU9OVEgnLFxyXG4gICAgICAgICdQUkVWSU9VU1FVQVJURVInLFxyXG4gICAgICAgICdQUkVWSU9VU1lFQVInLFxyXG4gICAgICAgICdTQU1FUEVSSU9ETEFTVFlFQVInLFxyXG4gICAgICAgICdTVEFSVE9GTU9OVEgnLFxyXG4gICAgICAgICdTVEFSVE9GUVVBUlRFUicsXHJcbiAgICAgICAgJ1NUQVJUT0ZZRUFSJyxcclxuICAgICAgICAnVE9UQUxNVEQnLFxyXG4gICAgICAgICdUT1RBTFFURCcsXHJcbiAgICAgICAgJ1RPVEFMWVREJyxcclxuICAgICAgICAnQUREQ09MVU1OUycsXHJcbiAgICAgICAgJ0FERE1JU1NJTkdJVEVNUycsXHJcbiAgICAgICAgJ0FMTCcsXHJcbiAgICAgICAgJ0FMTEVYQ0VQVCcsXHJcbiAgICAgICAgJ0FMTE5PQkxBTktST1cnLFxyXG4gICAgICAgICdBTExTRUxFQ1RFRCcsXHJcbiAgICAgICAgJ0NBTENVTEFURScsXHJcbiAgICAgICAgJ0NBTENVTEFURVRBQkxFJyxcclxuICAgICAgICAnQ0FMRU5EQVInLFxyXG4gICAgICAgICdDQUxFTkRBUkFVVE8nLFxyXG4gICAgICAgICdDUk9TU0ZJTFRFUicsXHJcbiAgICAgICAgJ0NST1NTSk9JTicsXHJcbiAgICAgICAgJ0NVUlJFTlRHUk9VUCcsXHJcbiAgICAgICAgJ0RBVEFUQUJMRScsXHJcbiAgICAgICAgJ0RFVEFJTFJPV1MnLFxyXG4gICAgICAgICdESVNUSU5DVCcsXHJcbiAgICAgICAgJ0VBUkxJRVInLFxyXG4gICAgICAgICdFQVJMSUVTVCcsXHJcbiAgICAgICAgJ0VYQ0VQVCcsXHJcbiAgICAgICAgJ0ZJTFRFUicsXHJcbiAgICAgICAgJ0ZJTFRFUlMnLFxyXG4gICAgICAgICdHRU5FUkFURScsXHJcbiAgICAgICAgJ0dFTkVSQVRFQUxMJyxcclxuICAgICAgICAnR1JPVVBCWScsXHJcbiAgICAgICAgJ0lHTk9SRScsXHJcbiAgICAgICAgJ0lOVEVSU0VDVCcsXHJcbiAgICAgICAgJ0lTT05PUkFGVEVSJyxcclxuICAgICAgICAnS0VFUEZJTFRFUlMnLFxyXG4gICAgICAgICdMT09LVVBWQUxVRScsXHJcbiAgICAgICAgJ05BVFVSQUxJTk5FUkpPSU4nLFxyXG4gICAgICAgICdOQVRVUkFMTEVGVE9VVEVSSk9JTicsXHJcbiAgICAgICAgJ1JFTEFURUQnLFxyXG4gICAgICAgICdSRUxBVEVEVEFCTEUnLFxyXG4gICAgICAgICdST0xMVVAnLFxyXG4gICAgICAgICdST0xMVVBBRERJU1NVQlRPVEFMJyxcclxuICAgICAgICAnUk9MTFVQR1JPVVAnLFxyXG4gICAgICAgICdST0xMVVBJU1NVQlRPVEFMJyxcclxuICAgICAgICAnUk9XJyxcclxuICAgICAgICAnU0FNUExFJyxcclxuICAgICAgICAnU0VMRUNUQ09MVU1OUycsXHJcbiAgICAgICAgJ1NVQlNUSVRVVEVXSVRISU5ERVgnLFxyXG4gICAgICAgICdTVU1NQVJJWkUnLFxyXG4gICAgICAgICdTVU1NQVJJWkVDT0xVTU5TJyxcclxuICAgICAgICAnVE9QTicsXHJcbiAgICAgICAgJ1RSRUFUQVMnLFxyXG4gICAgICAgICdVTklPTicsXHJcbiAgICAgICAgJ1VTRVJFTEFUSU9OU0hJUCcsXHJcbiAgICAgICAgJ1ZBTFVFUycsXHJcbiAgICAgICAgJ1NVTScsXHJcbiAgICAgICAgJ1NVTVgnLFxyXG4gICAgICAgICdQQVRIJyxcclxuICAgICAgICAnUEFUSENPTlRBSU5TJyxcclxuICAgICAgICAnUEFUSElURU0nLFxyXG4gICAgICAgICdQQVRISVRFTVJFVkVSU0UnLFxyXG4gICAgICAgICdQQVRITEVOR1RIJyxcclxuICAgICAgICAnQVZFUkFHRScsXHJcbiAgICAgICAgJ0FWRVJBR0VBJyxcclxuICAgICAgICAnQVZFUkFHRVgnLFxyXG4gICAgICAgICdDT1VOVCcsXHJcbiAgICAgICAgJ0NPVU5UQScsXHJcbiAgICAgICAgJ0NPVU5UQVgnLFxyXG4gICAgICAgICdDT1VOVEJMQU5LJyxcclxuICAgICAgICAnQ09VTlRST1dTJyxcclxuICAgICAgICAnQ09VTlRYJyxcclxuICAgICAgICAnRElTVElOQ1RDT1VOVCcsXHJcbiAgICAgICAgJ0RJVklERScsXHJcbiAgICAgICAgJ0dFT01FQU4nLFxyXG4gICAgICAgICdHRU9NRUFOWCcsXHJcbiAgICAgICAgJ01BWCcsXHJcbiAgICAgICAgJ01BWEEnLFxyXG4gICAgICAgICdNQVhYJyxcclxuICAgICAgICAnTUVESUFOJyxcclxuICAgICAgICAnTUVESUFOWCcsXHJcbiAgICAgICAgJ01JTicsXHJcbiAgICAgICAgJ01JTkEnLFxyXG4gICAgICAgICdNSU5YJyxcclxuICAgICAgICAnUEVSQ0VOVElMRS5FWEMnLFxyXG4gICAgICAgICdQRVJDRU5USUxFLklOQycsXHJcbiAgICAgICAgJ1BFUkNFTlRJTEVYLkVYQycsXHJcbiAgICAgICAgJ1BFUkNFTlRJTEVYLklOQycsXHJcbiAgICAgICAgJ1BST0RVQ1QnLFxyXG4gICAgICAgICdQUk9EVUNUWCcsXHJcbiAgICAgICAgJ1JBTksuRVEnLFxyXG4gICAgICAgICdSQU5LWCcsXHJcbiAgICAgICAgJ1NUREVWLlAnLFxyXG4gICAgICAgICdTVERFVi5TJyxcclxuICAgICAgICAnU1RERVZYLlAnLFxyXG4gICAgICAgICdTVERFVlguUycsXHJcbiAgICAgICAgJ1ZBUi5QJyxcclxuICAgICAgICAnVkFSLlMnLFxyXG4gICAgICAgICdWQVJYLlAnLFxyXG4gICAgICAgICdWQVJYLlMnLFxyXG4gICAgICAgICdYSVJSJyxcclxuICAgICAgICAnWE5QVicsXHJcbiAgICAgICAgLy8gU2NhbGFyXHJcbiAgICAgICAgJ0RBVEUnLFxyXG4gICAgICAgICdEQVRFRElGRicsXHJcbiAgICAgICAgJ0RBVEVWQUxVRScsXHJcbiAgICAgICAgJ0RBWScsXHJcbiAgICAgICAgJ0VEQVRFJyxcclxuICAgICAgICAnRU9NT05USCcsXHJcbiAgICAgICAgJ0hPVVInLFxyXG4gICAgICAgICdNSU5VVEUnLFxyXG4gICAgICAgICdNT05USCcsXHJcbiAgICAgICAgJ05PVycsXHJcbiAgICAgICAgJ1NFQ09ORCcsXHJcbiAgICAgICAgJ1RJTUUnLFxyXG4gICAgICAgICdUSU1FVkFMVUUnLFxyXG4gICAgICAgICdUT0RBWScsXHJcbiAgICAgICAgJ1dFRUtEQVknLFxyXG4gICAgICAgICdXRUVLTlVNJyxcclxuICAgICAgICAnWUVBUicsXHJcbiAgICAgICAgJ1lFQVJGUkFDJyxcclxuICAgICAgICAnQ09OVEFJTlMnLFxyXG4gICAgICAgICdDT05UQUlOU1JPVycsXHJcbiAgICAgICAgJ0NVU1RPTURBVEEnLFxyXG4gICAgICAgICdFUlJPUicsXHJcbiAgICAgICAgJ0hBU09ORUZJTFRFUicsXHJcbiAgICAgICAgJ0hBU09ORVZBTFVFJyxcclxuICAgICAgICAnSVNCTEFOSycsXHJcbiAgICAgICAgJ0lTQ1JPU1NGSUxURVJFRCcsXHJcbiAgICAgICAgJ0lTRU1QVFknLFxyXG4gICAgICAgICdJU0VSUk9SJyxcclxuICAgICAgICAnSVNFVkVOJyxcclxuICAgICAgICAnSVNGSUxURVJFRCcsXHJcbiAgICAgICAgJ0lTTE9HSUNBTCcsXHJcbiAgICAgICAgJ0lTTk9OVEVYVCcsXHJcbiAgICAgICAgJ0lTTlVNQkVSJyxcclxuICAgICAgICAnSVNPREQnLFxyXG4gICAgICAgICdJU1NVQlRPVEFMJyxcclxuICAgICAgICAnSVNURVhUJyxcclxuICAgICAgICAnVVNFUk5BTUUnLFxyXG4gICAgICAgICdVU0VSUFJJTkNJUEFMTkFNRScsXHJcbiAgICAgICAgJ0FORCcsXHJcbiAgICAgICAgJ0ZBTFNFJyxcclxuICAgICAgICAnSUYnLFxyXG4gICAgICAgICdJRkVSUk9SJyxcclxuICAgICAgICAnTk9UJyxcclxuICAgICAgICAnT1InLFxyXG4gICAgICAgICdTV0lUQ0gnLFxyXG4gICAgICAgICdUUlVFJyxcclxuICAgICAgICAnQUJTJyxcclxuICAgICAgICAnQUNPUycsXHJcbiAgICAgICAgJ0FDT1NIJyxcclxuICAgICAgICAnQUNPVCcsXHJcbiAgICAgICAgJ0FDT1RIJyxcclxuICAgICAgICAnQVNJTicsXHJcbiAgICAgICAgJ0FTSU5IJyxcclxuICAgICAgICAnQVRBTicsXHJcbiAgICAgICAgJ0FUQU5IJyxcclxuICAgICAgICAnQkVUQS5ESVNUJyxcclxuICAgICAgICAnQkVUQS5JTlYnLFxyXG4gICAgICAgICdDRUlMSU5HJyxcclxuICAgICAgICAnQ0hJU1EuRElTVCcsXHJcbiAgICAgICAgJ0NISVNRLkRJU1QuUlQnLFxyXG4gICAgICAgICdDSElTUS5JTlYnLFxyXG4gICAgICAgICdDSElTUS5JTlYuUlQnLFxyXG4gICAgICAgICdDT01CSU4nLFxyXG4gICAgICAgICdDT01CSU5BJyxcclxuICAgICAgICAnQ09ORklERU5DRS5OT1JNJyxcclxuICAgICAgICAnQ09ORklERU5DRS5UJyxcclxuICAgICAgICAnQ09TJyxcclxuICAgICAgICAnQ09TSCcsXHJcbiAgICAgICAgJ0NPVCcsXHJcbiAgICAgICAgJ0NPVEgnLFxyXG4gICAgICAgICdDVVJSRU5DWScsXHJcbiAgICAgICAgJ0RFR1JFRVMnLFxyXG4gICAgICAgICdFVkVOJyxcclxuICAgICAgICAnRVhQJyxcclxuICAgICAgICAnRVhQT04uRElTVCcsXHJcbiAgICAgICAgJ0ZBQ1QnLFxyXG4gICAgICAgICdGTE9PUicsXHJcbiAgICAgICAgJ0dDRCcsXHJcbiAgICAgICAgJ0lOVCcsXHJcbiAgICAgICAgJ0lTTy5DRUlMSU5HJyxcclxuICAgICAgICAnTENNJyxcclxuICAgICAgICAnTE4nLFxyXG4gICAgICAgICdMT0cnLFxyXG4gICAgICAgICdMT0cxMCcsXHJcbiAgICAgICAgJ01PRCcsXHJcbiAgICAgICAgJ01ST1VORCcsXHJcbiAgICAgICAgJ09ERCcsXHJcbiAgICAgICAgJ1BFUk1VVCcsXHJcbiAgICAgICAgJ1BJJyxcclxuICAgICAgICAnUE9JU1NPTi5ESVNUJyxcclxuICAgICAgICAnUE9XRVInLFxyXG4gICAgICAgICdRVU9USUVOVCcsXHJcbiAgICAgICAgJ1JBRElBTlMnLFxyXG4gICAgICAgICdSQU5EJyxcclxuICAgICAgICAnUkFOREJFVFdFRU4nLFxyXG4gICAgICAgICdST1VORCcsXHJcbiAgICAgICAgJ1JPVU5ERE9XTicsXHJcbiAgICAgICAgJ1JPVU5EVVAnLFxyXG4gICAgICAgICdTSUdOJyxcclxuICAgICAgICAnU0lOJyxcclxuICAgICAgICAnU0lOSCcsXHJcbiAgICAgICAgJ1NRUlQnLFxyXG4gICAgICAgICdTUVJUUEknLFxyXG4gICAgICAgICdUQU4nLFxyXG4gICAgICAgICdUQU5IJyxcclxuICAgICAgICAnVFJVTkMnLFxyXG4gICAgICAgICdCTEFOSycsXHJcbiAgICAgICAgJ0NPTkNBVEVOQVRFJyxcclxuICAgICAgICAnQ09OQ0FURU5BVEVYJyxcclxuICAgICAgICAnRVhBQ1QnLFxyXG4gICAgICAgICdGSU5EJyxcclxuICAgICAgICAnRklYRUQnLFxyXG4gICAgICAgICdGT1JNQVQnLFxyXG4gICAgICAgICdMRUZUJyxcclxuICAgICAgICAnTEVOJyxcclxuICAgICAgICAnTE9XRVInLFxyXG4gICAgICAgICdNSUQnLFxyXG4gICAgICAgICdSRVBMQUNFJyxcclxuICAgICAgICAnUkVQVCcsXHJcbiAgICAgICAgJ1JJR0hUJyxcclxuICAgICAgICAnU0VBUkNIJyxcclxuICAgICAgICAnU1VCU1RJVFVURScsXHJcbiAgICAgICAgJ1RSSU0nLFxyXG4gICAgICAgICdVTklDSEFSJyxcclxuICAgICAgICAnVU5JQ09ERScsXHJcbiAgICAgICAgJ1VQUEVSJyxcclxuICAgICAgICAnVkFMVUUnXHJcbiAgICBdLFxyXG4gICAgdG9rZW5pemVyOiB7XHJcbiAgICAgICAgcm9vdDogW1xyXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAY29tbWVudHMnIH0sXHJcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0B3aGl0ZXNwYWNlJyB9LFxyXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAbnVtYmVycycgfSxcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHN0cmluZ3MnIH0sXHJcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0Bjb21wbGV4SWRlbnRpZmllcnMnIH0sXHJcbiAgICAgICAgICAgIFsvWzssLl0vLCAnZGVsaW1pdGVyJ10sXHJcbiAgICAgICAgICAgIFsvWyh7fSldLywgJ0BicmFja2V0cyddLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICAvW2Etel9dW2EtekEtWjAtOV9dKi8sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BrZXl3b3Jkcyc6ICdrZXl3b3JkJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BmdW5jdGlvbnMnOiAna2V5d29yZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICdpZGVudGlmaWVyJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgWy9bPD49ISUmK1xcLSovfH5eXS8sICdvcGVyYXRvciddXHJcbiAgICAgICAgXSxcclxuICAgICAgICB3aGl0ZXNwYWNlOiBbWy9cXHMrLywgJ3doaXRlJ11dLFxyXG4gICAgICAgIGNvbW1lbnRzOiBbXHJcbiAgICAgICAgICAgIFsvXFwvXFwvKy4qLywgJ2NvbW1lbnQnXSxcclxuICAgICAgICAgICAgWy9cXC9cXCovLCB7IHRva2VuOiAnY29tbWVudC5xdW90ZScsIG5leHQ6ICdAY29tbWVudCcgfV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGNvbW1lbnQ6IFtcclxuICAgICAgICAgICAgWy9bXiovXSsvLCAnY29tbWVudCddLFxyXG4gICAgICAgICAgICBbL1xcKlxcLy8sIHsgdG9rZW46ICdjb21tZW50LnF1b3RlJywgbmV4dDogJ0Bwb3AnIH1dLFxyXG4gICAgICAgICAgICBbLy4vLCAnY29tbWVudCddXHJcbiAgICAgICAgXSxcclxuICAgICAgICBudW1iZXJzOiBbXHJcbiAgICAgICAgICAgIFsvMFt4WF1bMC05YS1mQS1GXSovLCAnbnVtYmVyJ10sXHJcbiAgICAgICAgICAgIFsvWyRdWystXSpcXGQqKFxcLlxcZCopPy8sICdudW1iZXInXSxcclxuICAgICAgICAgICAgWy8oKFxcZCsoXFwuXFxkKik/KXwoXFwuXFxkKykpKFtlRV1bXFwtK10/XFxkKyk/LywgJ251bWJlciddXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdHJpbmdzOiBbXHJcbiAgICAgICAgICAgIFsvTlwiLywgeyB0b2tlbjogJ3N0cmluZycsIG5leHQ6ICdAc3RyaW5nJyB9XSxcclxuICAgICAgICAgICAgWy9cIi8sIHsgdG9rZW46ICdzdHJpbmcnLCBuZXh0OiAnQHN0cmluZycgfV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIHN0cmluZzogW1xyXG4gICAgICAgICAgICBbL1teXCJdKy8sICdzdHJpbmcnXSxcclxuICAgICAgICAgICAgWy9cIlwiLywgJ3N0cmluZyddLFxyXG4gICAgICAgICAgICBbL1wiLywgeyB0b2tlbjogJ3N0cmluZycsIG5leHQ6ICdAcG9wJyB9XVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgY29tcGxleElkZW50aWZpZXJzOiBbXHJcbiAgICAgICAgICAgIFsvXFxbLywgeyB0b2tlbjogJ2lkZW50aWZpZXIucXVvdGUnLCBuZXh0OiAnQGJyYWNrZXRlZElkZW50aWZpZXInIH1dLFxyXG4gICAgICAgICAgICBbLycvLCB7IHRva2VuOiAnaWRlbnRpZmllci5xdW90ZScsIG5leHQ6ICdAcXVvdGVkSWRlbnRpZmllcicgfV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGJyYWNrZXRlZElkZW50aWZpZXI6IFtcclxuICAgICAgICAgICAgWy9bXlxcXV0rLywgJ2lkZW50aWZpZXInXSxcclxuICAgICAgICAgICAgWy9dXS8sICdpZGVudGlmaWVyJ10sXHJcbiAgICAgICAgICAgIFsvXS8sIHsgdG9rZW46ICdpZGVudGlmaWVyLnF1b3RlJywgbmV4dDogJ0Bwb3AnIH1dXHJcbiAgICAgICAgXSxcclxuICAgICAgICBxdW90ZWRJZGVudGlmaWVyOiBbXHJcbiAgICAgICAgICAgIFsvW14nXSsvLCAnaWRlbnRpZmllciddLFxyXG4gICAgICAgICAgICBbLycnLywgJ2lkZW50aWZpZXInXSxcclxuICAgICAgICAgICAgWy8nLywgeyB0b2tlbjogJ2lkZW50aWZpZXIucXVvdGUnLCBuZXh0OiAnQHBvcCcgfV1cclxuICAgICAgICBdXHJcbiAgICB9XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=