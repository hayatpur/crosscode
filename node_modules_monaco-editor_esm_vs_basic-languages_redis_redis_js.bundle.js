(self["webpackChunkcross_code"] = self["webpackChunkcross_code"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_redis_redis_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conf": () => (/* binding */ conf),
/* harmony export */   "language": () => (/* binding */ language)
/* harmony export */ });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var conf = {
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ]
};
var language = {
    defaultToken: '',
    tokenPostfix: '.redis',
    ignoreCase: true,
    brackets: [
        { open: '[', close: ']', token: 'delimiter.square' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    keywords: [
        'APPEND',
        'AUTH',
        'BGREWRITEAOF',
        'BGSAVE',
        'BITCOUNT',
        'BITFIELD',
        'BITOP',
        'BITPOS',
        'BLPOP',
        'BRPOP',
        'BRPOPLPUSH',
        'CLIENT',
        'KILL',
        'LIST',
        'GETNAME',
        'PAUSE',
        'REPLY',
        'SETNAME',
        'CLUSTER',
        'ADDSLOTS',
        'COUNT-FAILURE-REPORTS',
        'COUNTKEYSINSLOT',
        'DELSLOTS',
        'FAILOVER',
        'FORGET',
        'GETKEYSINSLOT',
        'INFO',
        'KEYSLOT',
        'MEET',
        'NODES',
        'REPLICATE',
        'RESET',
        'SAVECONFIG',
        'SET-CONFIG-EPOCH',
        'SETSLOT',
        'SLAVES',
        'SLOTS',
        'COMMAND',
        'COUNT',
        'GETKEYS',
        'CONFIG',
        'GET',
        'REWRITE',
        'SET',
        'RESETSTAT',
        'DBSIZE',
        'DEBUG',
        'OBJECT',
        'SEGFAULT',
        'DECR',
        'DECRBY',
        'DEL',
        'DISCARD',
        'DUMP',
        'ECHO',
        'EVAL',
        'EVALSHA',
        'EXEC',
        'EXISTS',
        'EXPIRE',
        'EXPIREAT',
        'FLUSHALL',
        'FLUSHDB',
        'GEOADD',
        'GEOHASH',
        'GEOPOS',
        'GEODIST',
        'GEORADIUS',
        'GEORADIUSBYMEMBER',
        'GETBIT',
        'GETRANGE',
        'GETSET',
        'HDEL',
        'HEXISTS',
        'HGET',
        'HGETALL',
        'HINCRBY',
        'HINCRBYFLOAT',
        'HKEYS',
        'HLEN',
        'HMGET',
        'HMSET',
        'HSET',
        'HSETNX',
        'HSTRLEN',
        'HVALS',
        'INCR',
        'INCRBY',
        'INCRBYFLOAT',
        'KEYS',
        'LASTSAVE',
        'LINDEX',
        'LINSERT',
        'LLEN',
        'LPOP',
        'LPUSH',
        'LPUSHX',
        'LRANGE',
        'LREM',
        'LSET',
        'LTRIM',
        'MGET',
        'MIGRATE',
        'MONITOR',
        'MOVE',
        'MSET',
        'MSETNX',
        'MULTI',
        'PERSIST',
        'PEXPIRE',
        'PEXPIREAT',
        'PFADD',
        'PFCOUNT',
        'PFMERGE',
        'PING',
        'PSETEX',
        'PSUBSCRIBE',
        'PUBSUB',
        'PTTL',
        'PUBLISH',
        'PUNSUBSCRIBE',
        'QUIT',
        'RANDOMKEY',
        'READONLY',
        'READWRITE',
        'RENAME',
        'RENAMENX',
        'RESTORE',
        'ROLE',
        'RPOP',
        'RPOPLPUSH',
        'RPUSH',
        'RPUSHX',
        'SADD',
        'SAVE',
        'SCARD',
        'SCRIPT',
        'FLUSH',
        'LOAD',
        'SDIFF',
        'SDIFFSTORE',
        'SELECT',
        'SETBIT',
        'SETEX',
        'SETNX',
        'SETRANGE',
        'SHUTDOWN',
        'SINTER',
        'SINTERSTORE',
        'SISMEMBER',
        'SLAVEOF',
        'SLOWLOG',
        'SMEMBERS',
        'SMOVE',
        'SORT',
        'SPOP',
        'SRANDMEMBER',
        'SREM',
        'STRLEN',
        'SUBSCRIBE',
        'SUNION',
        'SUNIONSTORE',
        'SWAPDB',
        'SYNC',
        'TIME',
        'TOUCH',
        'TTL',
        'TYPE',
        'UNSUBSCRIBE',
        'UNLINK',
        'UNWATCH',
        'WAIT',
        'WATCH',
        'ZADD',
        'ZCARD',
        'ZCOUNT',
        'ZINCRBY',
        'ZINTERSTORE',
        'ZLEXCOUNT',
        'ZRANGE',
        'ZRANGEBYLEX',
        'ZREVRANGEBYLEX',
        'ZRANGEBYSCORE',
        'ZRANK',
        'ZREM',
        'ZREMRANGEBYLEX',
        'ZREMRANGEBYRANK',
        'ZREMRANGEBYSCORE',
        'ZREVRANGE',
        'ZREVRANGEBYSCORE',
        'ZREVRANK',
        'ZSCORE',
        'ZUNIONSTORE',
        'SCAN',
        'SSCAN',
        'HSCAN',
        'ZSCAN'
    ],
    operators: [
    // NOT SUPPORTED
    ],
    builtinFunctions: [
    // NOT SUPPORTED
    ],
    builtinVariables: [
    // NOT SUPPORTED
    ],
    pseudoColumns: [
    // NOT SUPPORTED
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@pseudoColumns' },
            { include: '@numbers' },
            { include: '@strings' },
            { include: '@scopes' },
            [/[;,.]/, 'delimiter'],
            [/[()]/, '@brackets'],
            [
                /[\w@#$]+/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@operators': 'operator',
                        '@builtinVariables': 'predefined',
                        '@builtinFunctions': 'predefined',
                        '@default': 'identifier'
                    }
                }
            ],
            [/[<>=!%&+\-*/|~^]/, 'operator']
        ],
        whitespace: [[/\s+/, 'white']],
        pseudoColumns: [
            [
                /[$][A-Za-z_][\w@#$]*/,
                {
                    cases: {
                        '@pseudoColumns': 'predefined',
                        '@default': 'identifier'
                    }
                }
            ]
        ],
        numbers: [
            [/0[xX][0-9a-fA-F]*/, 'number'],
            [/[$][+-]*\d*(\.\d*)?/, 'number'],
            [/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/, 'number']
        ],
        strings: [
            [/'/, { token: 'string', next: '@string' }],
            [/"/, { token: 'string.double', next: '@stringDouble' }]
        ],
        string: [
            [/[^']+/, 'string'],
            [/''/, 'string'],
            [/'/, { token: 'string', next: '@pop' }]
        ],
        stringDouble: [
            [/[^"]+/, 'string.double'],
            [/""/, 'string.double'],
            [/"/, { token: 'string.double', next: '@pop' }]
        ],
        scopes: [
        // NOT SUPPORTED
        ]
    }
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcm9zcy1jb2RlLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9yZWRpcy9yZWRpcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFdBQVcsS0FBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsU0FBUyxZQUFZLEdBQUc7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTLFNBQVMsWUFBWSxHQUFHO0FBQ2pDLFNBQVMsd0JBQXdCO0FBQ2pDLFNBQVMsd0JBQXdCO0FBQ2pDLFNBQVMsd0JBQXdCO0FBQ2pDLFNBQVM7QUFDVDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsbURBQW1EO0FBQzVELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEseUJBQXlCO0FBQ3RDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEscUJBQXFCO0FBQ2xDLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUNBQW1DO0FBQ3RELG1CQUFtQixnREFBZ0Q7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0NBQWdDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVDQUF1QztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoibm9kZV9tb2R1bGVzX21vbmFjby1lZGl0b3JfZXNtX3ZzX2Jhc2ljLWxhbmd1YWdlc19yZWRpc19yZWRpc19qcy5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuZXhwb3J0IHZhciBjb25mID0ge1xyXG4gICAgYnJhY2tldHM6IFtcclxuICAgICAgICBbJ3snLCAnfSddLFxyXG4gICAgICAgIFsnWycsICddJ10sXHJcbiAgICAgICAgWycoJywgJyknXVxyXG4gICAgXSxcclxuICAgIGF1dG9DbG9zaW5nUGFpcnM6IFtcclxuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxyXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcclxuICAgICAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXHJcbiAgICAgICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH1cclxuICAgIF0sXHJcbiAgICBzdXJyb3VuZGluZ1BhaXJzOiBbXHJcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcclxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxyXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJyB9LFxyXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9XHJcbiAgICBdXHJcbn07XHJcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XHJcbiAgICBkZWZhdWx0VG9rZW46ICcnLFxyXG4gICAgdG9rZW5Qb3N0Zml4OiAnLnJlZGlzJyxcclxuICAgIGlnbm9yZUNhc2U6IHRydWUsXHJcbiAgICBicmFja2V0czogW1xyXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nLCB0b2tlbjogJ2RlbGltaXRlci5zcXVhcmUnIH0sXHJcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScsIHRva2VuOiAnZGVsaW1pdGVyLnBhcmVudGhlc2lzJyB9XHJcbiAgICBdLFxyXG4gICAga2V5d29yZHM6IFtcclxuICAgICAgICAnQVBQRU5EJyxcclxuICAgICAgICAnQVVUSCcsXHJcbiAgICAgICAgJ0JHUkVXUklURUFPRicsXHJcbiAgICAgICAgJ0JHU0FWRScsXHJcbiAgICAgICAgJ0JJVENPVU5UJyxcclxuICAgICAgICAnQklURklFTEQnLFxyXG4gICAgICAgICdCSVRPUCcsXHJcbiAgICAgICAgJ0JJVFBPUycsXHJcbiAgICAgICAgJ0JMUE9QJyxcclxuICAgICAgICAnQlJQT1AnLFxyXG4gICAgICAgICdCUlBPUExQVVNIJyxcclxuICAgICAgICAnQ0xJRU5UJyxcclxuICAgICAgICAnS0lMTCcsXHJcbiAgICAgICAgJ0xJU1QnLFxyXG4gICAgICAgICdHRVROQU1FJyxcclxuICAgICAgICAnUEFVU0UnLFxyXG4gICAgICAgICdSRVBMWScsXHJcbiAgICAgICAgJ1NFVE5BTUUnLFxyXG4gICAgICAgICdDTFVTVEVSJyxcclxuICAgICAgICAnQUREU0xPVFMnLFxyXG4gICAgICAgICdDT1VOVC1GQUlMVVJFLVJFUE9SVFMnLFxyXG4gICAgICAgICdDT1VOVEtFWVNJTlNMT1QnLFxyXG4gICAgICAgICdERUxTTE9UUycsXHJcbiAgICAgICAgJ0ZBSUxPVkVSJyxcclxuICAgICAgICAnRk9SR0VUJyxcclxuICAgICAgICAnR0VUS0VZU0lOU0xPVCcsXHJcbiAgICAgICAgJ0lORk8nLFxyXG4gICAgICAgICdLRVlTTE9UJyxcclxuICAgICAgICAnTUVFVCcsXHJcbiAgICAgICAgJ05PREVTJyxcclxuICAgICAgICAnUkVQTElDQVRFJyxcclxuICAgICAgICAnUkVTRVQnLFxyXG4gICAgICAgICdTQVZFQ09ORklHJyxcclxuICAgICAgICAnU0VULUNPTkZJRy1FUE9DSCcsXHJcbiAgICAgICAgJ1NFVFNMT1QnLFxyXG4gICAgICAgICdTTEFWRVMnLFxyXG4gICAgICAgICdTTE9UUycsXHJcbiAgICAgICAgJ0NPTU1BTkQnLFxyXG4gICAgICAgICdDT1VOVCcsXHJcbiAgICAgICAgJ0dFVEtFWVMnLFxyXG4gICAgICAgICdDT05GSUcnLFxyXG4gICAgICAgICdHRVQnLFxyXG4gICAgICAgICdSRVdSSVRFJyxcclxuICAgICAgICAnU0VUJyxcclxuICAgICAgICAnUkVTRVRTVEFUJyxcclxuICAgICAgICAnREJTSVpFJyxcclxuICAgICAgICAnREVCVUcnLFxyXG4gICAgICAgICdPQkpFQ1QnLFxyXG4gICAgICAgICdTRUdGQVVMVCcsXHJcbiAgICAgICAgJ0RFQ1InLFxyXG4gICAgICAgICdERUNSQlknLFxyXG4gICAgICAgICdERUwnLFxyXG4gICAgICAgICdESVNDQVJEJyxcclxuICAgICAgICAnRFVNUCcsXHJcbiAgICAgICAgJ0VDSE8nLFxyXG4gICAgICAgICdFVkFMJyxcclxuICAgICAgICAnRVZBTFNIQScsXHJcbiAgICAgICAgJ0VYRUMnLFxyXG4gICAgICAgICdFWElTVFMnLFxyXG4gICAgICAgICdFWFBJUkUnLFxyXG4gICAgICAgICdFWFBJUkVBVCcsXHJcbiAgICAgICAgJ0ZMVVNIQUxMJyxcclxuICAgICAgICAnRkxVU0hEQicsXHJcbiAgICAgICAgJ0dFT0FERCcsXHJcbiAgICAgICAgJ0dFT0hBU0gnLFxyXG4gICAgICAgICdHRU9QT1MnLFxyXG4gICAgICAgICdHRU9ESVNUJyxcclxuICAgICAgICAnR0VPUkFESVVTJyxcclxuICAgICAgICAnR0VPUkFESVVTQllNRU1CRVInLFxyXG4gICAgICAgICdHRVRCSVQnLFxyXG4gICAgICAgICdHRVRSQU5HRScsXHJcbiAgICAgICAgJ0dFVFNFVCcsXHJcbiAgICAgICAgJ0hERUwnLFxyXG4gICAgICAgICdIRVhJU1RTJyxcclxuICAgICAgICAnSEdFVCcsXHJcbiAgICAgICAgJ0hHRVRBTEwnLFxyXG4gICAgICAgICdISU5DUkJZJyxcclxuICAgICAgICAnSElOQ1JCWUZMT0FUJyxcclxuICAgICAgICAnSEtFWVMnLFxyXG4gICAgICAgICdITEVOJyxcclxuICAgICAgICAnSE1HRVQnLFxyXG4gICAgICAgICdITVNFVCcsXHJcbiAgICAgICAgJ0hTRVQnLFxyXG4gICAgICAgICdIU0VUTlgnLFxyXG4gICAgICAgICdIU1RSTEVOJyxcclxuICAgICAgICAnSFZBTFMnLFxyXG4gICAgICAgICdJTkNSJyxcclxuICAgICAgICAnSU5DUkJZJyxcclxuICAgICAgICAnSU5DUkJZRkxPQVQnLFxyXG4gICAgICAgICdLRVlTJyxcclxuICAgICAgICAnTEFTVFNBVkUnLFxyXG4gICAgICAgICdMSU5ERVgnLFxyXG4gICAgICAgICdMSU5TRVJUJyxcclxuICAgICAgICAnTExFTicsXHJcbiAgICAgICAgJ0xQT1AnLFxyXG4gICAgICAgICdMUFVTSCcsXHJcbiAgICAgICAgJ0xQVVNIWCcsXHJcbiAgICAgICAgJ0xSQU5HRScsXHJcbiAgICAgICAgJ0xSRU0nLFxyXG4gICAgICAgICdMU0VUJyxcclxuICAgICAgICAnTFRSSU0nLFxyXG4gICAgICAgICdNR0VUJyxcclxuICAgICAgICAnTUlHUkFURScsXHJcbiAgICAgICAgJ01PTklUT1InLFxyXG4gICAgICAgICdNT1ZFJyxcclxuICAgICAgICAnTVNFVCcsXHJcbiAgICAgICAgJ01TRVROWCcsXHJcbiAgICAgICAgJ01VTFRJJyxcclxuICAgICAgICAnUEVSU0lTVCcsXHJcbiAgICAgICAgJ1BFWFBJUkUnLFxyXG4gICAgICAgICdQRVhQSVJFQVQnLFxyXG4gICAgICAgICdQRkFERCcsXHJcbiAgICAgICAgJ1BGQ09VTlQnLFxyXG4gICAgICAgICdQRk1FUkdFJyxcclxuICAgICAgICAnUElORycsXHJcbiAgICAgICAgJ1BTRVRFWCcsXHJcbiAgICAgICAgJ1BTVUJTQ1JJQkUnLFxyXG4gICAgICAgICdQVUJTVUInLFxyXG4gICAgICAgICdQVFRMJyxcclxuICAgICAgICAnUFVCTElTSCcsXHJcbiAgICAgICAgJ1BVTlNVQlNDUklCRScsXHJcbiAgICAgICAgJ1FVSVQnLFxyXG4gICAgICAgICdSQU5ET01LRVknLFxyXG4gICAgICAgICdSRUFET05MWScsXHJcbiAgICAgICAgJ1JFQURXUklURScsXHJcbiAgICAgICAgJ1JFTkFNRScsXHJcbiAgICAgICAgJ1JFTkFNRU5YJyxcclxuICAgICAgICAnUkVTVE9SRScsXHJcbiAgICAgICAgJ1JPTEUnLFxyXG4gICAgICAgICdSUE9QJyxcclxuICAgICAgICAnUlBPUExQVVNIJyxcclxuICAgICAgICAnUlBVU0gnLFxyXG4gICAgICAgICdSUFVTSFgnLFxyXG4gICAgICAgICdTQUREJyxcclxuICAgICAgICAnU0FWRScsXHJcbiAgICAgICAgJ1NDQVJEJyxcclxuICAgICAgICAnU0NSSVBUJyxcclxuICAgICAgICAnRkxVU0gnLFxyXG4gICAgICAgICdMT0FEJyxcclxuICAgICAgICAnU0RJRkYnLFxyXG4gICAgICAgICdTRElGRlNUT1JFJyxcclxuICAgICAgICAnU0VMRUNUJyxcclxuICAgICAgICAnU0VUQklUJyxcclxuICAgICAgICAnU0VURVgnLFxyXG4gICAgICAgICdTRVROWCcsXHJcbiAgICAgICAgJ1NFVFJBTkdFJyxcclxuICAgICAgICAnU0hVVERPV04nLFxyXG4gICAgICAgICdTSU5URVInLFxyXG4gICAgICAgICdTSU5URVJTVE9SRScsXHJcbiAgICAgICAgJ1NJU01FTUJFUicsXHJcbiAgICAgICAgJ1NMQVZFT0YnLFxyXG4gICAgICAgICdTTE9XTE9HJyxcclxuICAgICAgICAnU01FTUJFUlMnLFxyXG4gICAgICAgICdTTU9WRScsXHJcbiAgICAgICAgJ1NPUlQnLFxyXG4gICAgICAgICdTUE9QJyxcclxuICAgICAgICAnU1JBTkRNRU1CRVInLFxyXG4gICAgICAgICdTUkVNJyxcclxuICAgICAgICAnU1RSTEVOJyxcclxuICAgICAgICAnU1VCU0NSSUJFJyxcclxuICAgICAgICAnU1VOSU9OJyxcclxuICAgICAgICAnU1VOSU9OU1RPUkUnLFxyXG4gICAgICAgICdTV0FQREInLFxyXG4gICAgICAgICdTWU5DJyxcclxuICAgICAgICAnVElNRScsXHJcbiAgICAgICAgJ1RPVUNIJyxcclxuICAgICAgICAnVFRMJyxcclxuICAgICAgICAnVFlQRScsXHJcbiAgICAgICAgJ1VOU1VCU0NSSUJFJyxcclxuICAgICAgICAnVU5MSU5LJyxcclxuICAgICAgICAnVU5XQVRDSCcsXHJcbiAgICAgICAgJ1dBSVQnLFxyXG4gICAgICAgICdXQVRDSCcsXHJcbiAgICAgICAgJ1pBREQnLFxyXG4gICAgICAgICdaQ0FSRCcsXHJcbiAgICAgICAgJ1pDT1VOVCcsXHJcbiAgICAgICAgJ1pJTkNSQlknLFxyXG4gICAgICAgICdaSU5URVJTVE9SRScsXHJcbiAgICAgICAgJ1pMRVhDT1VOVCcsXHJcbiAgICAgICAgJ1pSQU5HRScsXHJcbiAgICAgICAgJ1pSQU5HRUJZTEVYJyxcclxuICAgICAgICAnWlJFVlJBTkdFQllMRVgnLFxyXG4gICAgICAgICdaUkFOR0VCWVNDT1JFJyxcclxuICAgICAgICAnWlJBTksnLFxyXG4gICAgICAgICdaUkVNJyxcclxuICAgICAgICAnWlJFTVJBTkdFQllMRVgnLFxyXG4gICAgICAgICdaUkVNUkFOR0VCWVJBTksnLFxyXG4gICAgICAgICdaUkVNUkFOR0VCWVNDT1JFJyxcclxuICAgICAgICAnWlJFVlJBTkdFJyxcclxuICAgICAgICAnWlJFVlJBTkdFQllTQ09SRScsXHJcbiAgICAgICAgJ1pSRVZSQU5LJyxcclxuICAgICAgICAnWlNDT1JFJyxcclxuICAgICAgICAnWlVOSU9OU1RPUkUnLFxyXG4gICAgICAgICdTQ0FOJyxcclxuICAgICAgICAnU1NDQU4nLFxyXG4gICAgICAgICdIU0NBTicsXHJcbiAgICAgICAgJ1pTQ0FOJ1xyXG4gICAgXSxcclxuICAgIG9wZXJhdG9yczogW1xyXG4gICAgLy8gTk9UIFNVUFBPUlRFRFxyXG4gICAgXSxcclxuICAgIGJ1aWx0aW5GdW5jdGlvbnM6IFtcclxuICAgIC8vIE5PVCBTVVBQT1JURURcclxuICAgIF0sXHJcbiAgICBidWlsdGluVmFyaWFibGVzOiBbXHJcbiAgICAvLyBOT1QgU1VQUE9SVEVEXHJcbiAgICBdLFxyXG4gICAgcHNldWRvQ29sdW1uczogW1xyXG4gICAgLy8gTk9UIFNVUFBPUlRFRFxyXG4gICAgXSxcclxuICAgIHRva2VuaXplcjoge1xyXG4gICAgICAgIHJvb3Q6IFtcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHdoaXRlc3BhY2UnIH0sXHJcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0Bwc2V1ZG9Db2x1bW5zJyB9LFxyXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAbnVtYmVycycgfSxcclxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHN0cmluZ3MnIH0sXHJcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BzY29wZXMnIH0sXHJcbiAgICAgICAgICAgIFsvWzssLl0vLCAnZGVsaW1pdGVyJ10sXHJcbiAgICAgICAgICAgIFsvWygpXS8sICdAYnJhY2tldHMnXSxcclxuICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgL1tcXHdAIyRdKy8sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BrZXl3b3Jkcyc6ICdrZXl3b3JkJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BvcGVyYXRvcnMnOiAnb3BlcmF0b3InLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGJ1aWx0aW5WYXJpYWJsZXMnOiAncHJlZGVmaW5lZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdAYnVpbHRpbkZ1bmN0aW9ucyc6ICdwcmVkZWZpbmVkJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJ2lkZW50aWZpZXInXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbL1s8Pj0hJSYrXFwtKi98fl5dLywgJ29wZXJhdG9yJ11cclxuICAgICAgICBdLFxyXG4gICAgICAgIHdoaXRlc3BhY2U6IFtbL1xccysvLCAnd2hpdGUnXV0sXHJcbiAgICAgICAgcHNldWRvQ29sdW1uczogW1xyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICAvWyRdW0EtWmEtel9dW1xcd0AjJF0qLyxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnQHBzZXVkb0NvbHVtbnMnOiAncHJlZGVmaW5lZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICdpZGVudGlmaWVyJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgbnVtYmVyczogW1xyXG4gICAgICAgICAgICBbLzBbeFhdWzAtOWEtZkEtRl0qLywgJ251bWJlciddLFxyXG4gICAgICAgICAgICBbL1skXVsrLV0qXFxkKihcXC5cXGQqKT8vLCAnbnVtYmVyJ10sXHJcbiAgICAgICAgICAgIFsvKChcXGQrKFxcLlxcZCopPyl8KFxcLlxcZCspKShbZUVdW1xcLStdP1xcZCspPy8sICdudW1iZXInXVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgc3RyaW5nczogW1xyXG4gICAgICAgICAgICBbLycvLCB7IHRva2VuOiAnc3RyaW5nJywgbmV4dDogJ0BzdHJpbmcnIH1dLFxyXG4gICAgICAgICAgICBbL1wiLywgeyB0b2tlbjogJ3N0cmluZy5kb3VibGUnLCBuZXh0OiAnQHN0cmluZ0RvdWJsZScgfV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIHN0cmluZzogW1xyXG4gICAgICAgICAgICBbL1teJ10rLywgJ3N0cmluZyddLFxyXG4gICAgICAgICAgICBbLycnLywgJ3N0cmluZyddLFxyXG4gICAgICAgICAgICBbLycvLCB7IHRva2VuOiAnc3RyaW5nJywgbmV4dDogJ0Bwb3AnIH1dXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdHJpbmdEb3VibGU6IFtcclxuICAgICAgICAgICAgWy9bXlwiXSsvLCAnc3RyaW5nLmRvdWJsZSddLFxyXG4gICAgICAgICAgICBbL1wiXCIvLCAnc3RyaW5nLmRvdWJsZSddLFxyXG4gICAgICAgICAgICBbL1wiLywgeyB0b2tlbjogJ3N0cmluZy5kb3VibGUnLCBuZXh0OiAnQHBvcCcgfV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIHNjb3BlczogW1xyXG4gICAgICAgIC8vIE5PVCBTVVBQT1JURURcclxuICAgICAgICBdXHJcbiAgICB9XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=